/*
    need:
    - hashmap util for mappings
    - address util
    - strings util for dynamic arrays
    - ownable util
*/



// Interface
#define function balanceOf(address) nonpayable returns(uint256)
#define function ownerOf(uint256) nonpayable returns(address)
#define function name() nonpayable returns(string)
#define function symbol() nonpayable returns(string)
#define function tokenURI(uint256) nonpayable returns(string)

#define function approve(address, uint256) nonpayable returns()
#define function getApproved(uint256) view returns(address)
#define function setApprovalForAll(address, bool) nonpayable returns()
#define function isApprovedForAll(address, address) view returns(bool)

#define function transferFrom(address, address, uint256) nonpayable returns()
#define function safeTransferFrom(address, address, uint256) nonpayable returns()
#define function safeTransferFrom(address, address, uint256, bytes memory) nonpayable returns()

#define function mint(address, uint256) nonpayable returns()

// Events
#define event Transfer(address, address, uint256)
#define event Approval(address, address, uint256)
#define event ApprovalForAll(address, address, bool)

// Contract


// Constructor
#define macro CONSTRUCTOR() = takes(0) returns(0) {
    OWNABLE_CONSTRUCTOR();
}